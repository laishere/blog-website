.md-content {
  @apply box-border h-fit;

  :is(h1, h2, h3) {
    margin-top: 2rem;
    margin-bottom: 1rem;
    position: relative;

    &:hover {
      a {
        @apply sm:flex;
      }
    }

    a {
      position: absolute;
      right: 100%;
      @apply top-0 bottom-0 hidden items-center px-1;

      span.icon-link {
        &::before {
          content: "";
          display: block;
          width: 1.2rem;
          height: 1.2rem;
          @apply bg-[url('link.svg')] dark:bg-[url('link.dark.svg')];
        }
      }
    }
  }

  h1 {
    @apply text-5xl font-black;
    margin-bottom: 2rem;
  }

  h2 {
    @apply text-2xl font-bold;
  }

  h3 {
    @apply text-lg font-bold;
  }

  :is(p, pre, blockquote, table, ul, ol) {
    @apply mb-4;
  }

  p {
    @apply text-base leading-relaxed;
  }

  img {
    @apply max-w-full mx-auto my-8 rounded-lg;

    &.shadow {
      box-shadow: 0 0.2rem 1rem 0.2rem rgba(0, 0, 0, 0.1);
    }

    &.light {
      @apply dark:hidden;
    }

    &.dark {
      @apply hidden dark:block;
    }
  }

  blockquote {
    @apply bg-green-500 bg-opacity-20 border-l-4 border-green-500 p-4;

    > * {
      margin-bottom: 0;
    }
  }

  ul {
    list-style-type: disc;
    @apply pl-8;
  }

  ol {
    list-style-type: decimal;
    @apply pl-8;
  }

  li {
    @apply mt-2;

    ul {
      list-style-type: circle;
    }

    :is(p, ul, ol) {
      @apply mb-2;
    }

    :last-child {
      margin-bottom: 0;
    }
  }

  table {
    @apply w-full border-collapse;

    th,
    td {
      @apply border p-2 border-slate-200 dark:border-slate-600;
    }

    th {
      @apply bg-green-100 dark:bg-green-500 dark:bg-opacity-20;
    }
  }

  a {
    @apply text-blue-500 dark:text-sky-500 hover:underline;

    code {
      @apply dark:text-white underline;
    }
  }

  :not(pre) > code {
    @apply bg-violet-300 bg-opacity-50 dark:bg-violet-800 py-[0.2em] px-[0.3em] rounded;
    font-size: 0.9em;
  }

  pre {
    @apply leading-relaxed rounded-md box-border border dark:border-gray-700 overflow-hidden relative;

    &:hover {
      > button.copy-btn {
        @apply sm:flex;
      }
    }

    > button.copy-btn {
      @apply absolute top-0 right-0 flex sm:hidden items-center justify-center w-14 h-14;

      &.checked {
        @apply flex text-green-600 dark:text-green-500;
      }

      svg {
        height: 1rem;
        fill: currentColor;
        display: none;
      }

      &:not(.checked) > svg.copy {
        display: block;
      }

      &.checked > svg.checked {
        display: block;
      }
    }

    &:not(.shiki) {
      @apply px-4;
    }

    &[data-filename] {
      @apply pt-0;

      &::before {
        content: attr(data-filename);
        @apply flex items-center h-14 pl-12 text-base text-gray-600 dark:text-gray-300 border-b border-slate-200 dark:border-slate-600;
        @apply bg-no-repeat bg-[url('file.svg')] dark:bg-[url('file.dark.svg')];
        background-size: 1rem;
        background-position: 1.2rem center;
      }
    }

    > code {
      @apply grid overflow-auto py-4;
    }

    .line {
      @apply block pr-4;

      &.highlight {
        @apply bg-green-400 bg-opacity-10;
      }

      &:not([data-line]) {
        @apply px-4;
      }

      &[data-line]::before {
        content: attr(data-line);
        @apply text-sm min-w-8 inline-block text-right text-gray-400 mr-6;
      }
    }
  }
}

.toc code {
  @apply text-gray-800 dark:text-gray-200 bg-violet-300 bg-opacity-50 dark:bg-violet-800 py-[0.2em] px-[0.3em] rounded;
  font-size: 0.9em;
}

html.dark .shiki {
  &,
  span {
    color: var(--shiki-dark) !important;
    font-style: var(--shiki-dark-font-style) !important;
    font-weight: var(--shiki-dark-font-weight) !important;
    text-decoration: var(--shiki-dark-text-decoration) !important;
  }
}
